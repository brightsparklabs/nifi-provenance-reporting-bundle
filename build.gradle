/*
 * Created brightSPARK Labs
 * www.brightsparklabs.com
 */

// -----------------------------------------------------------------------------
// PLUGINS
// -----------------------------------------------------------------------------

plugins {
    // Apply the Java Library plugin.
    id 'java-library'
    // Apply the Gradle nar plugin to build the .nar file.
    id 'io.github.lhotari.gradle-nar-plugin' version '0.5.1'

    // PUBLISHING
    // Apply the Maven publish plugin.
    id 'maven-publish'
    // Apply the Signing plugin, since Maven Central requires artifacts to be signed.
    id 'signing'
    // Maven Central publishing needs to be fed through Nexus.
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
}

// -----------------------------------------------------------------------------
// REPOSITORIES
// -----------------------------------------------------------------------------

repositories {
    // Use mavenCentral for resolving dependencies.
    mavenCentral()
}

// -----------------------------------------------------------------------------
// DEPENDENCIES
// -----------------------------------------------------------------------------

ext {
    NIFI_VERSION = "1.9.2"
}

dependencies {
    api "org.apache.nifi:nifi-processor-utils:${NIFI_VERSION}"
    api 'co.elastic.clients:elasticsearch-java:8.8.1'
    api 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    api 'com.squareup.okhttp:okhttp:2.7.1'
    compileOnly "org.apache.nifi:nifi-api:${NIFI_VERSION}"
    implementation 'com.google.guava:guava:32.1.2-jre'
}

// -----------------------------------------------------------------------------
// JAVA VERSION
// -----------------------------------------------------------------------------

sourceCompatibility = 1.8
targetCompatibility = 1.8

// -----------------------------------------------------------------------------
// PROJECT IDENTIFICATION
// -----------------------------------------------------------------------------

project.description = 'NiFi bundle for reporting provenance data.'
project.group = 'com.brightsparklabs'
project.version = 'git describe --dirty --always --tags'.execute().text.trim()
project.ext.url = 'https://github.com/brightsparklabs/nifi-provenance-reporting-bundle'
project.ext.scm = 'scm:git@github.com:brightsparklabs/nifi-provenance-reporting-bundle.git'

// -----------------------------------------------------------------------------
// SETUP ARTIFACTS FOR PUBLISHING
// -----------------------------------------------------------------------------

def narFile = layout.buildDirectory.file("libs/${project.name}-${version}.nar")
def narArtifact = artifacts.add('archives', narFile.get().asFile)

publishing {
    publications {
        mavenNar(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version

            artifact narArtifact

            // Maven Central requires specific POM attributes.
            pom {
                name = project.name
                description = project.description
                url = project.url

                scm {
                    connection = project.scm
                    developerConnection = project.scm
                    url = project.url
                }

                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'brightsparklabs'
                        name = 'brightSPARK Labs'
                        email = 'enquire@brightsparklabs.com'
                    }
                    developer {
                        id = 'jfrazee'
                        name = 'Joey Frazee'
                    }
                }
            }
        }
    }
}

// Maven Central requires signed artifacts.
signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenNar

    // Only require signing when publishing (otherwise normal builds would need GPG keys).
    required { gradle.taskGraph.hasTask("publishToSonatype") }
}

// -----------------------------------------------------------------------------
// PUBLISH ARTIFACTS (via nexus)
// -----------------------------------------------------------------------------

// Ensure the .nar file is built before publishing.
tasks.withType(AbstractPublishToMaven).configureEach {task ->
    task.dependsOn nar
}
tasks.withType(Sign).configureEach {task ->
    task.dependsOn nar
}

nexusPublishing {
    repositories {
        // Credentials default to:
        // - Property `sonatypeUsername` or ENV variable `ORG_GRADLE_PROJECT_sonatypeUsername`.
        // - Property `sonatypePassword` or ENV variable `ORG_GRADLE_PROJECT_sonatypePassword`.
        sonatype()
    }
}

task prePublishToMavenCentral {
    group 'brightSPARK Labs - Maven Central Publishing'
    description 'Stages the release on Sonatype ready for publishing to Maven Central.'
    dependsOn 'publishToSonatype', 'closeSonatypeStagingRepository'
}

task publishToMavenCentral {
    group 'brightSPARK Labs - Maven Central Publishing'
    description 'Publishes the release to Maven Central.'
    dependsOn 'publishToSonatype', 'closeAndReleaseSonatypeStagingRepository'
}
